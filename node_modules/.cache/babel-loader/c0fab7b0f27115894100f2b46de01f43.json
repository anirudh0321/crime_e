{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\prith\\\\Desktop\\\\New folder (5)\\\\starter_kit-master\\\\starter_kit-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport SimpleStorageContract from './abis/SimpleStorage.json';\nimport getWeb3 from './utils/getWeb3'; //import ipfs from './ipfs'\n\nimport './css/oswald.css';\nimport './css/open-sans.css';\nimport './css/pure-min.css';\nimport './App.css';\nimport Web3 from 'web3';\nimport { create, IPFSHTTPClient } from \"ipfs-http-client\";\nvar projectId = '2GGrPVPK7M6XYbWBzrX6GzKefIH';\nvar projectSecret = 'a8314de9cffa57989e80a363f66981d5';\nvar authorization = \"Basic \" + btoa(projectId + \":\" + projectSecret);\nvar ipfs = IPFSHTTPClient | undefined;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      accountBalance: 0,\n      token: {},\n      ethSwap: {},\n      ethBalance: '0',\n      tokenBalance: '0',\n      loading: true\n    };\n\n    try {\n      ipfs = create({\n        host: 'ipfs.infura.io',\n        port: 5001,\n        protocol: 'https',\n        headers: {\n          authorization: authorization\n        }\n      });\n      console.log(\"Done\");\n    } catch (error) {\n      console.error(\"IPFS error \", error);\n      ipfs = undefined;\n    }\n\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                });\n                this.setState({\n                  loading: false\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      // Get network provider and web3 instance.\n      // See utils/getWeb3 for more info.\n      getWeb3.then(function (results) {\n        _this2.setState({\n          web3: results.web3\n        }); // Instantiate contract once web3 provided.\n\n\n        _this2.instantiateContract();\n      }).catch(function () {\n        console.log('Error finding web3.');\n      });\n    }\n  }, {\n    key: \"instantiateContract\",\n    value: function instantiateContract() {\n      var _this3 = this;\n\n      /*\n       * SMART CONTRACT EXAMPLE\n       *\n       * Normally these functions would be called in the context of a\n       * state management library, but for convenience I've placed them here.\n       */\n      var contract = require('truffle-contract');\n\n      var simpleStorage = contract(SimpleStorageContract);\n      simpleStorage.setProvider(this.state.web3.currentProvider); // Get accounts.\n\n      this.state.web3.eth.getAccounts(function (error, accounts) {\n        simpleStorage.deployed().then(function (instance) {\n          _this3.simpleStorageInstance = instance;\n\n          _this3.setState({\n            account: accounts\n          }); // Get the value from the contract to prove it worked.\n          // return this.simpleStorageInstance.get.call(accounts[2])\n\n\n          return _this3.simpleStorageInstance.get.call(_this3.account);\n        }).then(function (ipfsHash) {\n          // Update state with the result.\n          return _this3.setState({\n            ipfsHash: ipfsHash\n          });\n        });\n      });\n    }\n  }, {\n    key: \"captureFile\",\n    value: function captureFile(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this4.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this4.state.buffer);\n      };\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this5 = this;\n\n      event.preventDefault();\n      var caseno = document.getElementById('caseno').value;\n      console.log(\"Case Number :\" + caseno);\n      var casename = document.getElementById('casename').value;\n      console.log(\"Case Name :\" + casename);\n      var description = document.getElementById('description').value;\n      console.log(\"Case Details :\" + description);\n      console.log('Account Address :', this.state.account);\n      ipfs.add(this.state.buffer).then(function (result) {\n        console.log(\"File hash successful...\");\n        console.log(result);\n        console.log('Hash: ', result.path);\n\n        _this5.simpleStorageInstance.set(result.path, caseno, casename, description, {\n          from: _this5.state.account[0]\n        }).then(function (r) {\n          console.log(r);\n          return _this5.setState({\n            ipfsHash: result.path\n          }); // console.log('ifpsHash', this.state.ipfsHash)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"logo.png\",\n        id: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        id: \"logoname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Secure Crime Evidence\"), React.createElement(\"div\", {\n        id: \"header-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://localhost:3000/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Department Login\"), React.createElement(\"a\", {\n        href: \"./about.html\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"About\"), React.createElement(\"a\", {\n        id: \"active\",\n        href: \"home.html\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"h3\", {\n        id: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Account Address : \", this.state.account)), React.createElement(\"section\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Case Number\")), React.createElement(\"div\", {\n        className: \"col-75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"caseno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Case Name\")), React.createElement(\"div\", {\n        className: \"col-75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"casename\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Enter Description\")), React.createElement(\"div\", {\n        className: \"col-75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"description\",\n        id: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Add Evidence\")), React.createElement(\"div\", {\n        className: \"col-75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Submit\")))))), React.createElement(\"section\", {\n        id: \"contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        id: \"eth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"ETH Hash\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Hash Value\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"IPFS Hash stored on Eth Contract \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.state.ipfsHash)))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\prith\\Desktop\\New folder (5)\\starter_kit-master\\starter_kit-master\\src\\App.js"],"names":["React","Component","SimpleStorageContract","getWeb3","Web3","create","IPFSHTTPClient","projectId","projectSecret","authorization","btoa","ipfs","undefined","App","props","state","account","accountBalance","token","ethSwap","ethBalance","tokenBalance","loading","host","port","protocol","headers","console","log","error","captureFile","bind","onSubmit","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","getBalance","ethereum","enable","currentProvider","alert","then","results","instantiateContract","catch","contract","require","simpleStorage","setProvider","deployed","instance","simpleStorageInstance","get","call","ipfsHash","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","caseno","document","getElementById","value","casename","description","add","path","set","from","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SimpleStorageContract from './abis/SimpleStorage.json'\nimport getWeb3 from './utils/getWeb3'\n//import ipfs from './ipfs'\nimport './css/oswald.css'\nimport './css/open-sans.css'\nimport './css/pure-min.css'\nimport './App.css'\nimport Web3 from 'web3'\nimport { create, IPFSHTTPClient } from \"ipfs-http-client\";\n\nconst projectId = '2GGrPVPK7M6XYbWBzrX6GzKefIH';\nconst projectSecret = 'a8314de9cffa57989e80a363f66981d5';\nconst authorization = \"Basic \" + btoa(projectId + \":\" + projectSecret);\nlet ipfs = IPFSHTTPClient | undefined;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      accountBalance: 0,\n      token: {},\n      ethSwap: {},\n      ethBalance: '0',\n      tokenBalance: '0',\n      loading: true\n    }\n      try {\n          ipfs = create({\n              host: 'ipfs.infura.io',\n              port: 5001,\n              protocol: 'https',\n              headers: {\n                  authorization: authorization,\n              },\n          });\n          console.log(\"Done\");\n      } catch (error) {\n          console.error(\"IPFS error \", error);\n          ipfs = undefined;\n      }\n\n    this.captureFile = this.captureFile.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  \n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    \n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts })\n\n    const ethBalance = await web3.eth.getBalance(this.state.account)\n    this.setState({ ethBalance })\n \n    this.setState({ loading: false })\n  }\n\n\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n\n\n  \n\n  componentWillMount() {\n    // Get network provider and web3 instance.\n    // See utils/getWeb3 for more info.\n\n    getWeb3\n    .then(results => {\n      this.setState({\n        web3: results.web3\n      })\n\n      // Instantiate contract once web3 provided.\n      this.instantiateContract()\n    })\n    .catch(() => {\n      console.log('Error finding web3.')\n    })\n  }\n\n  instantiateContract() {\n    /*\n     * SMART CONTRACT EXAMPLE\n     *\n     * Normally these functions would be called in the context of a\n     * state management library, but for convenience I've placed them here.\n     */\n\n    const contract = require('truffle-contract')\n    const simpleStorage = contract(SimpleStorageContract)\n    simpleStorage.setProvider(this.state.web3.currentProvider)\n\n    // Get accounts.\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      simpleStorage.deployed().then((instance) => {\n        this.simpleStorageInstance = instance\n        this.setState({ account: accounts })\n        // Get the value from the contract to prove it worked.\n        // return this.simpleStorageInstance.get.call(accounts[2])\n        return this.simpleStorageInstance.get.call(this.account)\n      }).then((ipfsHash) => {\n        // Update state with the result.\n        return this.setState({ ipfsHash })\n      })\n    })\n  }\n\n  captureFile(event) {\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  onSubmit(event) {\n    event.preventDefault()\n    var caseno = document.getElementById('caseno').value\n    console.log(\"Case Number :\"+caseno)\n    var casename = document.getElementById('casename').value\n    console.log(\"Case Name :\"+casename)\n    var description = document.getElementById('description').value\n    console.log(\"Case Details :\"+description)\n      console.log('Account Address :', this.state.account);\n\n      ipfs.add(this.state.buffer).then((result) => {\n          console.log(\"File hash successful...\");\n          console.log(result)\n          console.log('Hash: ', result.path);\n\n          this.simpleStorageInstance.set(result.path, caseno, casename, description, { from: this.state.account[0] }).then((r) => {\n              console.log(r);\n              return this.setState({ ipfsHash: result.path})\n              // console.log('ifpsHash', this.state.ipfsHash)\n          }) \n      });\n  }\n\n  \n  \n  render() {\n    \n    return (\n      <div className=\"App\">\n            <div id=\"header\">\n              <img src=\"logo.png\" id=\"logo\"></img>\n              <h2 id=\"logoname\">Secure Crime Evidence</h2>\n            <div id=\"header-right\">\n             \n              <a href=\"http://localhost:3000/\">Department Login</a>\n              <a href=\"./about.html\">About</a>\n              <a id=\"active\" href=\"home.html\">Home</a>\n              \n            </div>\n            <h3 id=\"address\">Account Address : {this.state.account}</h3>\n             \n          </div>\n\n          <section id=\"container\">\n                <div className=\"container\">\n                  <form onSubmit={this.onSubmit}> \n                        <div className=\"row\">\n                            <div className=\"col-25\">\n                          <label>Case Number</label>\n                        </div>\n                            <div className=\"col-75\">\n                          <input type=\"text\" id=\"caseno\" />\n                        </div>\n                      </div> \n\n                        <div className=\"row\">\n                            <div className=\"col-25\">\n                          <label>Case Name</label>\n                        </div>\n                            <div className=\"col-75\">\n                          <input type=\"text\" id=\"casename\" />\n                        </div>\n                      </div> \n\n                      \n\n                        <div className=\"row\">\n                            <div className=\"col-25\">\n                          <label >Enter Description</label>\n                        </div>\n                            <div className=\"col-75\">\n                          <textarea name=\"description\" id=\"description\" />\n                        </div>\n                      </div> \n\n                      \n                        <div className=\"row\">\n                            <div className=\"col-25\">\n                          <label>Add Evidence</label>\n                        </div>\n                            <div className=\"col-75\">\n                          <input type='file' onChange={this.captureFile} />\n                         \n                        </div>\n                      </div>   \n\n                        <div className=\"row\">\n                            <div className=\"col-75\">\n                            <button type='submit'>Submit</button>\n                        </div>\n                      </div> \n                  </form>\n                \n                </div>\n               \n          </section>\n\n          <section id=\"contents\">\n          <br></br>\n          <br></br>\n          <br></br>\n                <table id=\"eth\">\n                    <tbody>\n                    <tr>\n                      <th>ETH Hash</th>\n                      <th>Hash Value</th>\n                    </tr>\n                    <tr>\n                      <td>IPFS Hash stored on Eth Contract </td>\n                      <td>{this.state.ipfsHash}</td>\n                       \n                    </tr>\n                    </tbody>\n                </table>\n                <br></br>\n                <br></br>\n                <br></br>\n                \n             \n           </section>\n            \n       </div>\n    );\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}